@page "/fetchdata"
@using BlazorApp.Shared 
@using QuizMaster.Shared
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@if (quiz != null)
{
    <h2>@quiz.Title</h2>

    foreach(Question q in quiz.Questions){
        <h2>@q.QuestionText</h2>

        foreach(Answer a in q.Answers){
            <h3>@a.AnswerText</h3>
            <h3>@a.IsCorrect</h3>
        }
    }

}

@code {
    private WeatherForecast[] forecasts = new WeatherForecast[]{};
    private Quiz quiz;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("/api/WeatherForecast") ?? new WeatherForecast[]{};
            quiz = await Http.GetFromJsonAsync<Quiz>("/api/Quiz") ?? new Quiz() { };
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }
    }
}
